:root {

    /* Cards size is A7 plus bleeds */
    --width: 74mm;
    --height: 105mm;
    --bleed: 2mm;

    /* the card corner radius to display cut
       the bleed cut is not printed */
    --card-corner: 3mm;

    /* The horizontal margin for cards text */
    --text-margin: 4.5mm;

    /* Font definitions */
    --default-font: "FuturaPT";
    --title-font: "Mundial";

    /* Color definitions for cards */
    --blue: #3A88A1;
    --red-rgb: 233, 45, 60;
    --red: rgb(var(--red-rgb));
    --green-rgb: 71, 156, 106;
    --green: rgb(var(--green-rgb));
    --yellow-rgb: 247, 179, 22; /* #F7B316 */
    --yellow: rgb(var(--yellow-rgb));
    --purple: #2C2852;

    /* medium font weight for futura */
    --medium: 500;

    --verso-offset: 0mm /*0.5mm*/;
}

/* print page definition */
@page {
    size: A3;
    margin-top: 0mm;
    margin-right: 0mm;
    margin-bottom: 0mm;
    margin-left: 0mm;

    @top-center {
        content: "Page " counter(page);
        padding-top: 10mm;
    }
}

/* Fonts and their variations */
@font-face {
    font-family: "Mundial";
    src: url("../fonts/MundialBold.ttf");
    font-weight: bold;
}

@font-face {
    font-family: "Mundial";
    src: url("../fonts/MundialLight.ttf");
}

@font-face {
    font-family: "FuturaPT";
    src: url("../fonts/FuturaPTBook.ttf");
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: "FuturaPT";
    src: url("../fonts/FuturaPTMedium.ttf");
    font-weight: 500;
    font-style: normal;
}

@font-face {
    font-family: "FuturaPT";
    src: url("../fonts/FuturaPTBold.ttf");
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: "FuturaPT";
    src: url("../fonts/FuturaPTBookOblique.ttf");
    font-weight: normal;
    font-style: italic;
}


/* Default font and text size */
body {
    font-family: var(--default-font);
    font-size: 9pt;
    line-height: 1.1em;
    font-weight: normal;
}

/* Pages are defined by sections */
section {
    break-before: page;
}

/* Cards color is defined once at the card level 
   in the --color variable */
   .card.blue { --color: var(--blue); }
   .card.red { --color: var(--red); }
   .card.green { --color: var(--green); }
   .card.yellow { --color: var(--yellow); }
   .card.purple { --color: var(--purple); }
   
/* Cards use specified width/height + bleeds */
.card {
    width: calc(var(--width) + 2*var(--bleed));
    height: calc(var(--height) + 2*var(--bleed));
    position: absolute;

    /* defines an solid color for image color underlay */
    --underlay: linear-gradient(var(--color), var(--color));
    /* the overlay is used to draw a solid border at
       the top of the background illustation. By default it's
       transparent */
    --overlay: linear-gradient(transparent, transparent);

    --illustration: url(../img/situation.svg);

}


/* Cards type are defined using classes: 
   recto/verso for the side of the card
   situation/strategy/escalade for the type of card */

/* background illustrations for cards */

.verso.situation {
    /* verso of situations have the map and logo as background */
    background-image: url(../img/verso.svg);
    background-repeat: no-repeat;
    background-size: contain;
}

.escalade {
    /* for escalades, the illustration has no underlay 
       the overlay is used to draw a solid border at the top
       of the illustation */

    --border-size: 1mm; /* the solid border size */
    --overlay: linear-gradient(var(--color) 0 var(--border-size), transparent var(--border-size) 100%);
    --underlay: linear-gradient(transparent, transparent);
}

.recto.situation,
.recto.strategy,
.recto .escalade {
    /* recto of situation and strategy use the same image
       taking 50% of height from bottom */
    /* the svg has alfa and let the underlay color appear, the overlay is used to draw a border at the top */
    font-size: 11.1pt;
    line-height: 12.7pt;

    background-image: var(--overlay), var(--illustration), var(--underlay)  ;
    background-repeat: no-repeat;
    background-size: auto 50%;
    background-position: bottom;
}



.verso.strategy,
.verso.escalade {
    /* verso of strategies have a 20mm image at the bottom */
    --bg-size: calc(var(--bleed) + 20mm);
    --illustration: url(../img/strategy.svg);

    font-size: 9pt;

    background-image: var(--overlay), var(--illustration) , var(--underlay);

    background-repeat: no-repeat;
    background-size: auto var(--bg-size);
    background-position: bottom;
}

.recto.alea {
    --alpha: 0.8;
    --white: rgba(255,255,255,var(--alpha));
    &.a1 { --bg: url(img/a1.svg)  } 
    &.a2 { --bg: url(img/a2.svg)  } 
    &.a3 { --bg: url(img/a3.svg)  } 
    &.a4 { --bg: url(img/a4.svg)  } 
    &.a5 { --bg: url(img/a5.svg)  } 
    &.a6 { --bg: url(img/a6.svg)  } 
    &.a7 { --bg: url(img/a7.svg)  } 
    &.a8 { --bg: url(img/a8.svg)  } 
    &.a9 { --bg: url(img/a9.svg)  } 
    &.a10 { --bg: url(img/a10.svg)  } 

    background-image: var(--bg), url(img/map.svg);
    background-repeat: no-repeat;
    background-size: cover;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;


    div { display: none; }

}

.verso.alea {
    background-image: url(../img/alea.svg);
    background-size: cover;
}

/* display bleeds on screen 
   it creates a box of width/height size
   offset by bleed.
   Bleeds limit is not printed
   */
@media screen,
pagedjs-ignore {

    .card::after {
        content: '';

        position: absolute;
    
        /* is precisely of card size */
        width: var(--width);
        height: var(--height);
        
        /* is offset of bleed size */
        left: var(--bleed);
        top: var(--bleed);

        /* the actual border */
        border: 0.1mm solid black;
        border-radius: var(--card-corner);

        /* the element is in front to be visible 
           but doesn't intercept mouse events
           to make inspection of the other parts of the 
           card easier */
        z-index: 0; 
        pointer-events: none;
    }
}

/* these properties define the grid for the cards 
on an A3 page */

.recto .c1 { left: calc(23.9mm - var(--bleed)); }
.recto .c2 { left: calc(107.6mm - var(--bleed)); }
.recto .c3 { left: calc(190.1mm - var(--bleed)); }

/* for verso, columns are from right to left */
.verso .c1 { left: calc(199.1mm - var(--bleed)); }
.verso .c2 { left: calc(115.4mm - var(--bleed)); }
.verso .c3 { left: calc(32.9mm - var(--bleed)); }

/* rows are the same on both sides */
.recto.r1 { top: calc(24mm - var(--bleed)); }
.recto.r2 { top: calc(140.2mm - var(--bleed)); }
.recto.r3 { top: calc(255mm - var(--bleed)); }

.verso.r1 { top: calc(24mm + var(--verso-offset) - var(--bleed)); }
.verso.r2 { top: calc(140.2mm + var(--verso-offset) - var(--bleed)); }
.verso.r3 { top: calc(255mm + var(--verso-offset) - var(--bleed)); }

/* used to style titles */
h1 {
    /* use title font */
    font-family: var(--title-font);
    font-size: 14pt;
    font-weight: bold;

    /* stick to the top center */
    border-radius: 0 0 2mm 2mm;
    width: 60%;

    margin-top: 0;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 1mm;

    padding-top: calc(3.5mm + var(--bleed)); /* larger to continue over bleeds */
    padding-bottom: 2mm;
    
    /* by default text is white on color background */
    background-color: var(--color);
    color: white;

    /* text placement */
    text-align: center;
    text-transform: uppercase;
}

.escalade h1 {
    /* for escalades, the text is in color,
       and only the border is colored */
    color: var(--color);
    background-color: white;

    border: 1.2pt solid var(--color);
    border-top: none;
}

.verso h1 {
    width: 70%;
}



.description {

    /* setup margins to limit inner text width,
       since the card has bleads, they have to be
       added to actual margins */
    margin-left: calc(var(--text-margin) + var(--bleed));
    margin-right: calc(var(--text-margin) + var(--bleed));

    height: 40.5mm;

    /* Center inner p */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* description paragraphs are centered
    horizontal and vertically */
.description p {
    display: block; /* to be part of the flex */
    flex-basis: content; /* size based on content */

    text-align: center;

    margin-top: 0;
    margin-bottom: 0.5em;

    &:last-of-type {
        margin-bottom: 0;
    }
}

/* the list of consequence for strategy/escalade cards */

.consequences {

    height: 75mm;

    /* horizontal margins to limit text width */
    margin-left: calc(var(--text-margin) + var(--bleed));
    margin-right: calc(var(--text-margin) + var(--bleed));

    /* use flex for children */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.consequences p {
    display: block;
    flex-basis: content;
    
    /* put just 1/2 line between p */
    margin-top: 0;
    margin-bottom: 0.5em;
    
    /* left aligned with a minimum line height */
    text-align: left;
    line-height: 1em;

    &:last-of-type {
        /* no margin on the last one */
        margin-bottom: 0;
    }
}

.consequences .dice {
    font-weight: var(--medium); 
    color: var(--color);
}

.consequences .score {
    font-weight: var(--medium);
}

.consequences .escalade { color: var(--color); }
.positif { color: var(--green); }
.negatif { color: var(--red); }
.zero { color: var(--yellow); }

/* display the card counter box 
   the counter is actually two consecutive divs
   containing the two values
*/
.count {
    /* this is the outer div */

    /* total width of the white rounded box */
    --height: 1.5em;
    --width: 3.1em;
    --right-dist: 4.8mm;
    --bottom-dist: 5mm;
    --separator-size: 0.8pt;

    /* size and position */
    position: absolute;
    height: var(--height);
    width: var(--width);
    right: calc(var(--right-dist) + var(--bleed));
    bottom: calc(var(--bottom-dist) + var(--bleed));

    /* rounded box */
    background-color: white;
    border-radius: calc(var(--height) / 2);

    /* font */
    font-family: var(--title-font);
    font-weight: bold;
    color: var(--color);

    /* text is centered in each div */
    text-align: center;
    vertical-align: middle;

    /* size divs with flex */
    display: flex;
    align-items: center;
}

.count div {
    /* defines each div size */
    display: inline-block;
    flex-basis: 0;
    flex-grow: 1;
}

.count div:first-child {
    /* half of the border */
    border-right: calc(var(--separator-size) / 2) solid var(--color);
}

.count div:last-child {
    /* other half of the border */
    border-left: calc(var(--separator-size) / 2) solid var(--color);
}

.norm {
    background-size: cover;
    background-repeat: no-repeat;
}

.norm.verso {
    background-image: url(../img/normes.svg);
}

.norm.handicap.recto {
    background-image: url(../img/handicap.svg);
}

.norm.genre.recto {
    background-image: url(../img/genre.svg);
}

.norm.classe-sociale.recto {
    background-image: url(../img/classe-sociale.svg);
}

.norm.orientation.recto {
    background-image: url(../img/orientation.svg);
}

.norm.couleur.recto {
    background-image: url(../img/couleur.svg);
}

.norm.non-discriminee.recto {
    background-image: url(../img/non-discriminee.svg);
}
/* Cricut calibration marks 
   the html doc contains 4 divs which have each
   2 borders sets using the attributes*/
.mark {
    position: absolute;
    width: 25.4mm;
    height: 25.4mm;
}

.m-top {
    top: 14.8mm;
    border-top: 1.5mm solid black;
}

.m-left {
    left: 14.8mm;
    border-left: 1.5mm solid black;
}

.m-right {
    right: 23.8mm;
    border-right: 1.5mm solid black;
}

.m-bottom {
    bottom: 50.8mm;
    border-bottom: 1.5mm solid black;
}

.inclusive {
    white-space: nowrap ;
}
.supsub {
    display: inline-block;
    margin-left: 0.07em;
}

.supsub sup,
.supsub sub {
    position: relative;
    display: block;
    font-size: .7em;
    line-height: 0.5;
    text-align: left;
}

.supsub sub {
    top: .3em;
}

.inclf {
    color: var(--blue);
}
.inclm {
    color: var(--yellow);
}